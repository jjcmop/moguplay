<?php

namespace Admin\Controller;
use User\Api\UserApi as UserApi;

/**
 * 后台首页控制器
 * @author 麦当苗儿 <zuojiazi@vip.qq.com>
 */
class GiftbagController extends ThinkController {

    const model_name = 'Giftbag';

    public function lists(){
        $extend = array('key'=>'gift_name');
        if(isset($_REQUEST['game_name'])){
            if($_REQUEST['game_name']=='全部'){
                unset($_REQUEST['game_name']);
            }else{
                $extend['game_name']=$_REQUEST['game_name'];
                unset($_REQUEST['game_name']);
            }
        }
    	parent::lists(self::model_name,$_GET["p"],$extend);

    }

    public function record(){
        if(isset($_REQUEST['game_name'])){
            if($_REQUEST['game_name']=='全部'){
                unset($_REQUEST['game_name']);
            }else{
                $extend['game_name']=$_REQUEST['game_name'];
                unset($_REQUEST['game_name']);
            }
        }
        if(isset($_REQUEST['user_account'])){
            $extend['user_account']=array('like','%'.$_REQUEST['user_account'].'%');
            unset($_REQUEST['user_account']);
        }
        parent::lists('GiftRecord',$_GET["p"],$extend);
    }

    public function add(){
        if(IS_POST){
            $Model  =   D('Giftbag');
            // 获取模型的字段信息
            $Model  =   $this->checkAttr($Model,$model['id']);
            $data = $Model->create();
            if($data){
                $data['novice'] = str_replace(array("\r\n", "\r", "\n"), ",", $_POST['novice']);  
                $data['server_name']=get_server_name($data['server_id']);
                $Model->add($data);
                $this->success('添加'.$model['title'].'成功！', U('lists?model='.$model['name']));
            } else {
                $this->error($Model->getError());
            }
        } else {
            $this->display('add');
        }
    }

    public function edit($id=0){
		$_REQUEST['id'] || $this->error('请选择要编辑的用户！');
		$model = M('Model')->getByName(self::model_name); /*通过Model名称获取Model完整信息*/
		//获取模型信息
        $model = M('Model')->find($model['id']);
        $model || $this->error('模型不存在！');

        if(IS_POST){
            $Model  =   D(parse_name(get_table_name($model['id']),1));
            // 获取模型的字段信息
            $Model  =   $this->checkAttr($Model,$model['id']);
            $data = $Model->create();
            if($data){
                $data['novice'] = str_replace(array("\r\n", "\r", "\n"), ",", $_POST['novice']);
                $Model->save($data);
                $this->success('保存'.$model['title'].'成功！', U('lists?model='.$model['name']));
            } else {
                $this->error($Model->getError());
            }
        } else {
            $fields     = get_model_attribute($model['id']);
            //获取数据
            $data       = D(get_table_name($model['id']))->find($id);
            $data || $this->error('数据不存在！');

            $this->assign('model', $model);
            $this->assign('fields', $fields);
            $this->assign('data', $data);
            $this->meta_title = '编辑'.$model['title'];
            $this->display($model['template_edit']?$model['template_edit']:'');
        }
    }

    public function del($model = null, $ids=null){
        $model = M('Model')->getByName(self::model_name); /*通过Model名称获取Model完整信息*/
        parent::del($model["id"],$ids);
    }

    public function get_ajax_area_list(){
    	$area = D('Server');
    	$map['game_id'] = I('post.game_id',1);
    	$list = $area->where($map)->select();
    	$this->ajaxReturn($list);
    }
    /**
     * 激活码列表展示
     * @author  whh 
     */
   public function exchange_list(){ 
        $map=array();
        if(isset($_REQUEST['title'])){
            $map['title'] = $_REQUEST['title'];
        }
        //print_r($_REQUEST['forbid_ip']);exit;
       
        $row=10;
        $page = intval($_GET['p']);
        $page = $page ? $page : 1; //默认显示第一页数据
        $model=M('exchange','tab_');
        $data=$model
        ->where($map)
        ->order('id desc')
        ->page($page, 10)
        ->select();
        //print_r($data);exit;
        $count=$model
        ->where($map)
        ->count();
        if($count > $row){
            $page = new \Think\Page($count, $row);
            $page->setConfig('theme','%FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END% %HEADER%');
            $this->assign('_page', $page->show());
        }
        $this->assign('_list', $data);
        $this->meta_title = 'IP信息';
        $this->display();
    }
    /**
     * 激活码添加
     * @author  whh 
     */
    public function exchange_add(){
        
        if(IS_POST){
                $data=$_REQUEST;
                $data['start_time']=strtotime($_REQUEST['start_time']);
                $data['end_time']=strtotime($_REQUEST['end_time']);
                $data['create_time']=time();
                $data['novice'] = str_replace(array("\r\n", "\r", "\n"), ",", $_POST['novice']); 
                //print_r($data);exit; 
                $model=M('exchange','tab_');
                $return=$model->add($data);
                if ($return) {
                    $this->success('激活码添加成功！',U('exchange_list'));
                } else {
                    $this->error('激活码添加失败！',U('exchange_list'));
                }
                
           
        } else {
            $this->display('exchange_add');
        }
    }
    
    /**
     * 激活码编辑
     * @author  whh 
     */
    public function exchange_edit($id=0){
        $_REQUEST['id'] || $this->error('请选择要编辑的用户！');
        if(IS_POST){
           
                $model=M('exchange','tab_');
                $data=$_REQUEST;
                $data['start_time']=strtotime($_REQUEST['start_time']);
                $data['end_time']=strtotime($_REQUEST['end_time']);
                $data['novice'] = str_replace(array("\r\n", "\r", "\n"), ",", $_POST['novice']);
                $return=$model->save($data);
                if ($return) {
                    $this->success('激活码编辑成功！',U('exchange_list'));
                } else {
                    $this->error('激活码编辑失败！',U('exchange_list'));
                }
           
        } else {

            $data = M('exchange','tab_')->find($id);
            $this->assign('data', $data);
            $this->display();
        }
    }

     /**
     * 激活码删除
     * @author  whh 
     */
     public function exchange_del($id) {
        if (empty($id)) {
             $this->error('请选择要删除的激活码！');
        } else {
            $where['id']=$id;
            $return=M('exchange','tab_')->where($where)->delete();
            if ($return) {
                $this->success('激活码删除成功！',U('exchange_list'));
            } else {
                $this->error('激活码删除失败！',U('exchange_list'));
            }
            
        }      
          
     }

     /**
     * 激活码领取记录
     * @author  whh 
     */
     public function exchange_record(){
         if(isset($_REQUEST['user_account'])){
            $map['user_account']=array('like','%'.$_REQUEST['user_account'].'%');
            unset($_REQUEST['user_account']);
        }

        $row=10;
        $page = intval($_GET['p']);
        $page = $page ? $page : 1; //默认显示第一页数据
        $model=M('exchange_record','tab_');
        $data=$model
        ->where($map)
        ->order('id desc')
        ->page($page, 10)
        ->select();
        //print_r($data);exit;
        $count=$model
        ->where($map)
        ->count();
        if($count > $row){
            $page = new \Think\Page($count, $row);
            $page->setConfig('theme','%FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END% %HEADER%');
            $this->assign('_page', $page->show());
        }
        $this->assign('_list', $data);
        $this->meta_title = 'IP信息';
        $this->display();

     }
}
